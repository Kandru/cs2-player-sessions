document.addEventListener("DOMContentLoaded",(()=>{const typeSelect=document.getElementById("type"),rulesContainer=document.getElementById("rules-container"),challengesList=document.getElementById("challenges-list"),uploadChallenges=document.getElementById("upload-challenges");let challenges={},allRules={},operators=[];function addRuleElement(key="",operator="",value=""){const ruleDiv=document.createElement("div"),keySelect=document.createElement("select"),operatorSelect=document.createElement("select"),valueInput=document.createElement("input"),deleteButton=document.createElement("button");ruleDiv.classList.add("rule"),keySelect.name="key";const selectedType=typeSelect.value;allRules[selectedType].rules.forEach((rule=>{const option=document.createElement("option");option.value=rule.slug,option.textContent=rule.name,rule.slug===key&&(option.selected=!0),keySelect.appendChild(option)})),ruleDiv.appendChild(keySelect),operatorSelect.name="operator",operators.forEach((op=>{const option=document.createElement("option");option.value=op,option.textContent=op,op===operator&&(option.selected=!0),operatorSelect.appendChild(option)})),ruleDiv.appendChild(operatorSelect),valueInput.name="value",valueInput.value=value,valueInput.type=allRules[typeSelect.value].rules.find((rule=>rule.slug===keySelect.value)).type,"checkbox"==valueInput.type&&(valueInput.checked="true"===value||!0===value,0==operatorSelect.selectedIndex&&(operatorSelect.selectedIndex=Array.from(operatorSelect.options).findIndex((option=>"bool=="===option.value)))),ruleDiv.appendChild(valueInput),deleteButton.type="button",deleteButton.textContent="Delete",deleteButton.addEventListener("click",(()=>{rulesContainer.removeChild(ruleDiv)})),keySelect.addEventListener("change",(()=>{valueInput.type=allRules[typeSelect.value].rules.find((rule=>rule.slug===keySelect.value)).type,"checkbox"==valueInput.type?(valueInput.value="false",operatorSelect.selectedIndex=Array.from(operatorSelect.options).findIndex((option=>"bool=="===option.value))):(valueInput.value="",operatorSelect.selectedIndex=0)})),ruleDiv.appendChild(deleteButton),rulesContainer.appendChild(ruleDiv)}fetch("data/challenge-types.json").then((response=>response.json())).then((data=>{const{types:types,operators:ops}=data;operators=ops,allRules=types;for(const entry in allRules){const option=document.createElement("option");option.value=entry,option.textContent=allRules[entry].name,typeSelect.appendChild(option)}typeSelect.addEventListener("change",(()=>{rulesContainer.innerHTML="";typeSelect.value})),typeSelect.dispatchEvent(new Event("change"))})),document.getElementById("add-rule").addEventListener("click",(()=>{addRuleElement("","","")})),document.getElementById("save-challenge").addEventListener("click",(()=>{const type=typeSelect.value,title=document.getElementById("title").value;let slug=document.getElementById("slug").value;slug=slug.replace(/\s+/g,"_").replace(/[^a-zA-Z0-9_]/g,"");const challenge={title:title,type:type,points:document.getElementById("points").value,amount:document.getElementById("amount").value,rules:Array.from(document.querySelectorAll("#rules-container .rule")).map((ruleDiv=>{const key=ruleDiv.querySelector('[name="key"]').value,operator=ruleDiv.querySelector('[name="operator"]').value;if("checkbox"==ruleDiv.querySelector('[name="value"]').type)var value=ruleDiv.querySelector('[name="value"]').checked;else value=ruleDiv.querySelector('[name="value"]').value;return key&&operator&&value?{key:key,operator:operator,value:value}:null})).filter((rule=>null!==rule))};challenges[slug]=challenge;const li=document.createElement("li");li.textContent=slug+" -> "+title,li.addEventListener("click",(()=>{typeSelect.value=challenge.type,document.getElementById("title").value=challenge.title,document.getElementById("slug").value=slug,document.getElementById("points").value=challenge.points,document.getElementById("amount").value=challenge.amount,rulesContainer.innerHTML="",challenge.rules.forEach((rule=>{addRuleElement(rule.key,rule.operator,rule.value)}))})),challengesList.appendChild(li)})),document.getElementById("download-challenges").addEventListener("click",(()=>{const blob=new Blob([JSON.stringify({blueprints:challenges},null,2)],{type:"application/json"}),url=URL.createObjectURL(blob),a=document.createElement("a");a.href=url,a.download="challenges.json",a.click(),URL.revokeObjectURL(url)})),uploadChallenges.addEventListener("change",(event=>{const file=event.target.files[0],reader=new FileReader;reader.onload=e=>{const uploadedChallenges=JSON.parse(e.target.result).blueprints;challenges={...challenges,...uploadedChallenges},challengesList.innerHTML="";for(const slug in challenges){const challenge=challenges[slug],li=document.createElement("li");li.textContent=slug+" -> "+challenge.title,li.addEventListener("click",(()=>{typeSelect.value=challenge.type,document.getElementById("title").value=challenge.title,document.getElementById("slug").value=slug,document.getElementById("points").value=challenge.points,document.getElementById("amount").value=challenge.amount,rulesContainer.innerHTML="",challenge.rules.forEach((rule=>{addRuleElement(rule.key,rule.operator,rule.value)}))})),challengesList.appendChild(li)}},reader.readAsText(file)}))}));